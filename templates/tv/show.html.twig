{% extends 'base.html.twig' %}
{% block title %}{{ tv.name }} — Série{% endblock %}

{% block stylesheets %}{{ parent() }}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>
{% endblock %}

{% block body %}
<article class="space-y-8">
  {# Media #}
  <section class="grid gap-8 lg:grid-cols-3">
    <div class="lg:col-span-2 space-y-4">
      <div class="aspect-[16/9] rounded-2xl overflow-hidden ring-1 ring-white/10 bg-neutral-900">
        {% if trailerKey %}
          <iframe
            class="w-full h-full"
            src="https://www.youtube.com/embed/{{ trailerKey }}"
            title="Trailer"
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen></iframe>
        {% else %}
          <img src="{{ img.img(tv.backdrop_path ?: tv.poster_path, 'w780') }}" alt="{{ tv.name }}" class="w-full h-full object-cover">
        {% endif %}
      </div>

      {# Titre + Ma liste + Notes #}
      <div>
        <div class="flex items-center gap-3 flex-wrap">
          <h1 class="text-3xl font-extrabold">{{ tv.name }}</h1>

          {% if is_granted('ROLE_USER') %}
            {% set inWatch = inWatchlist ?? false %}
            <button id="watchlistBtn"
              class="inline-flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-semibold ring-1 ring-white/10
                     {{ inWatch ? 'bg-rose-600 hover:bg-rose-500' : 'bg-neutral-800 hover:bg-neutral-700' }}"
              data-mediatype="tv"
              data-id="{{ tv.id }}"
              data-title="{{ tv.name }}"
              data-poster="{{ tv.poster_path }}"
              data-backdrop="{{ tv.backdrop_path }}"
              data-initial="{{ inWatch ? '1' : '0' }}">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor"><path d="M6 2h12a2 2 0 0 1 2 2v18l-8-4-8 4V4a2 2 0 0 1 2-2z"/></svg>
              <span class="wl-label">{{ inWatch ? 'Retirer' : '➕ Ma liste' }}</span>
            </button>
          {% endif %}
        </div>

        {# ---- NOTES UTILISATEURS ---- #}
        <section class="mt-2">
          <div class="flex items-center gap-4 flex-wrap">
            <div class="flex items-center gap-1" id="ratingStars" data-mediatype="tv" data-id="{{ tv.id }}">
              {% for i in 1..10 %}
                <button class="star px-1 text-lg" data-value="{{ i }}" aria-label="{{ i }}/10">★</button>
              {% endfor %}
            </div>
            <div class="text-sm text-neutral-300">
              <span id="ratingYour" class="font-semibold">Ta note : —</span>
              <span class="mx-2 text-neutral-600">•</span>
              <span id="ratingAvg" class="font-semibold">Moyenne : —</span>
              <span id="ratingCount" class="text-neutral-400">(0 votes)</span>
            </div>
          </div>
        </section>

        {% if tv.tagline %}<p class="mt-2 text-neutral-300">{{ tv.tagline }}</p>{% endif %}
        <div class="mt-2 text-sm text-neutral-400">
          {% if tv.first_air_date %}Première diffusion : {{ tv.first_air_date|date('d/m/Y') }}{% endif %}
          {% if tv.number_of_seasons %} • Saisons : {{ tv.number_of_seasons }}{% endif %}
          {% if tv.number_of_episodes %} • Épisodes : {{ tv.number_of_episodes }}{% endif %}
          {% if tv.vote_average %} • TMDB {{ tv.vote_average|number_format(1, ',', ' ') }}/10{% endif %}
        </div>
        {% if tv.genres %}
          <div class="mt-2 text-sm text-neutral-300">
            Genres : {{ tv.genres|map(g => g.name)|join(', ') }}
          </div>
        {% endif %}
      </div>
    </div>

    {# Aside : casting + Où regarder #}
    <aside class="lg:col-span-1 space-y-6">
      <div class="rounded-2xl bg-neutral-900 ring-1 ring-white/10 p-6">
        <h2 class="text-lg font-semibold">Distribution</h2>
        <ul class="mt-3 space-y-3">
          {% for c in cast %}
            {% set pslug = (c.name ?? 'personne')|slug %}
            <li>
              <a href="{{ path('app_person_show', { id: c.id, slug: pslug }) }}" class="flex items-center gap-3 group">
                <img src="{{ c.profile_path ? img.img(c.profile_path, 'w185') : asset('placeholder-avatar.png') }}" alt="{{ c.name }}" class="w-12 h-12 rounded-lg object-cover ring-1 ring-white/10 bg-neutral-800 group-hover:ring-rose-500/40 transition">
                <div>
                  <div class="font-medium group-hover:text-rose-400 transition">{{ c.name }}</div>
                  {% if c.character %}<div class="text-sm text-neutral-400">{{ c.character }}</div>{% endif %}
                </div>
              </a>
            </li>
          {% else %}
            <li class="text-neutral-400 text-sm">Casting indisponible.</li>
          {% endfor %}
        </ul>
      </div>

      {% if providers %}
        <section class="rounded-2xl bg-neutral-900 ring-1 ring-white/10 p-6">
          <h2 class="text-lg font-semibold mb-3">Où regarder ? (FR)</h2>
          {% set groups = {
            'Abonnement' : providers.flatrate ?? [],
            'Location'   : providers.rent ?? [],
            'Achat'      : providers.buy ?? []
          } %}
          {% for label, list in groups %}
            {% if list is not empty %}
              <div class="mb-3">
                <div class="text-sm text-neutral-400 mb-2">{{ label }}</div>
                <div class="flex flex-wrap gap-3">
                  {% for p in list %}
                    <div class="flex items-center gap-2 px-3 py-1.5 rounded-lg bg-white/5 ring-1 ring-white/10">
                      {% if p.logo_path %}
                        <img src="https://image.tmdb.org/t/p/w45{{ p.logo_path }}" alt="{{ p.provider_name }}" class="w-5 h-5 rounded-sm">
                      {% endif %}
                      <span class="text-sm">{{ p.provider_name }}</span>
                    </div>
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </section>
      {% endif %}
    </aside>
  </section>

  {# Onglets (Résumé / Saisons) #}
  <section>
    <div class="border-b border-white/10 flex gap-6">
      <button class="tab-btn px-3 py-2 text-sm font-semibold border-b-2 border-transparent data-[active=true]:border-rose-500 data-[active=true]:text-white text-neutral-300"
              data-tab="resume" data-active="true">Résumé</button>
      <button class="tab-btn px-3 py-2 text-sm font-semibold border-b-2 border-transparent data-[active=true]:border-rose-500 data-[active=true]:text-white text-neutral-300"
              data-tab="seasons">Saisons & épisodes</button>
    </div>

    <div class="tab-panel mt-4" id="tab-resume" data-tab="resume">
      {% if tv.overview %}
        <p class="text-neutral-200 leading-relaxed">{{ tv.overview }}</p>
      {% else %}
        <p class="text-neutral-400">Aucun synopsis disponible.</p>
      {% endif %}
    </div>

    <div class="tab-panel mt-4 hidden" id="tab-seasons" data-tab="seasons">
      {% if tv.seasons is not empty %}
        <div class="space-y-3" id="seasonsAccordion" data-tvid="{{ tv.id }}">
          {% for s in tv.seasons %}
            <div class="rounded-xl bg-neutral-900 ring-1 ring-white/10 overflow-hidden">
              <button class="season-toggle w-full text-left px-4 py-3 flex items-center justify-between hover:bg-neutral-800"
                      data-season="{{ s.season_number }}">
                <div class="flex items-center gap-3">
                  <div class="w-12 h-16 rounded-md overflow-hidden ring-1 ring-white/10 bg-neutral-800 shrink-0">
                    <img src="{{ img.img(s.poster_path, 'w185') }}" alt="S{{ s.season_number }}" class="w-full h-full object-cover">
                  </div>
                  <div>
                    <div class="font-semibold">Saison {{ s.season_number }}{% if s.air_date %} — {{ s.air_date|date('Y') }}{% endif %}</div>
                    <div class="text-sm text-neutral-400">
                      {% if s.episode_count %}{{ s.episode_count }} épisodes{% endif %}
                    </div>
                  </div>
                </div>
                <svg class="chev h-5 w-5 text-neutral-400 transition-transform" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
              </button>
              <div class="season-panel hidden p-4 border-t border-white/10" id="season-panel-{{ s.season_number }}">
                <div class="text-neutral-400 text-sm">Chargement…</div>
              </div>
            </div>
          {% endfor %}
        </div>
      {% else %}
        <div class="text-neutral-400">Aucune saison trouvée.</div>
      {% endif %}
    </div>
  </section>

  {# ----- AVIS / COMMENTAIRES ----- #}
  <section class="mt-8">
    <h2 class="text-xl font-semibold mb-3">Avis</h2>
    {% if app.user %}
      {% include 'review/_form.html.twig' with { mediaType: 'tv', tmdbId: tv.id } %}
    {% else %}
      <div class="my-3 text-sm">
        <a href="{{ path('app_login') }}" class="underline">Connecte-toi</a> pour écrire un avis.
      </div>
    {% endif %}

    {% include 'review/_list.html.twig' with { mediaType: 'tv', tmdbId: tv.id, sort: 'recent' } %}
  </section>

  {# Recommandations / Similaires #}
  {% if reco is not empty or similar is not empty %}
    <section class="space-y-6">
      {% if reco is not empty %}
        <div>
          <h2 class="text-xl font-semibold mb-3">Recommandations</h2>
          <div class="swiper recos">
            <div class="swiper-wrapper">
              {% for t2 in reco %}
                {% set title2 = t2.name %}
                {% set slug2 = title2|slug %}
                <a class="swiper-slide group" href="{{ path('app_tv_show', { id: t2.id, slug: slug2 }) }}">
                  <div class="aspect-[2/3] overflow-hidden rounded-xl ring-1 ring-white/10 bg-neutral-900">
                    <img src="{{ img.img(t2.poster_path, 'w342') }}" alt="{{ title2 }}" class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300">
                  </div>
                  <div class="mt-2 text-sm font-medium truncate">{{ title2 }}</div>
                </a>
              {% endfor %}
            </div>
          </div>
        </div>
      {% endif %}

      {% if similar is not empty %}
        <div>
          <h2 class="text-xl font-semibold mb-3">Similaires</h2>
          <div class="swiper recos">
            <div class="swiper-wrapper">
              {% for t2 in similar %}
                {% set title2 = t2.name %}
                {% set slug2 = title2|slug %}
                <a class="swiper-slide group" href="{{ path('app_tv_show', { id: t2.id, slug: slug2 }) }}">
                  <div class="aspect-[2/3] overflow-hidden rounded-xl ring-1 ring-white/10 bg-neutral-900">
                    <img src="{{ img.img(t2.poster_path, 'w342') }}" alt="{{ title2 }}" class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300">
                  </div>
                  <div class="mt-2 text-sm font-medium truncate">{{ title2 }}</div>
                </a>
              {% endfor %}
            </div>
          </div>
        </div>
      {% endif %}
    </section>
  {% endif %}
</article>
{% endblock %}

{% block javascripts %}{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script>
  // Tabs
  (function(){
    const tabs = document.querySelectorAll('.tab-btn');
    const panels = document.querySelectorAll('.tab-panel');
    tabs.forEach(btn=>{
      btn.addEventListener('click', ()=>{
        const target = btn.dataset.tab;
        tabs.forEach(b=>b.dataset.active = (b===btn).toString());
        panels.forEach(p=> p.classList.toggle('hidden', p.dataset.tab !== target));
      });
    });
  })();

  // Accordéon saisons (lazy-load)
  (function(){
    const accordion = document.getElementById('seasonsAccordion');
    if (!accordion) return;
    const urlTemplate = `{{ path('app_tv_season', { id: tv.id, season: 1 }) }}`;

    accordion.querySelectorAll('.season-toggle').forEach((tog)=>{
      tog.addEventListener('click', async ()=>{
        const season = tog.dataset.season;
        const panel = document.getElementById(`season-panel-${season}`);
        const chev = tog.querySelector('.chev');

        const isOpen = !panel.classList.contains('hidden');
        accordion.querySelectorAll('.season-panel').forEach(p=>p.classList.add('hidden'));
        accordion.querySelectorAll('.chev').forEach(c=>c.style.transform='');
        if (!isOpen) {
          panel.classList.remove('hidden');
          chev.style.transform = 'rotate(180deg)';
        } else {
          panel.classList.add('hidden');
          chev.style.transform = '';
          return;
        }

        if (panel.dataset.loaded === 'true') return;

        try {
          panel.innerHTML = '<div class="text-neutral-400 text-sm">Chargement…</div>';
          const url = urlTemplate.replace('/season/1', `/season/${season}`);
          const res = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }});
          panel.innerHTML = await res.text();
          panel.dataset.loaded = 'true';
        } catch (e) {
          panel.innerHTML = '<div class="text-rose-400 text-sm">Impossible de charger cette saison.</div>';
        }
      });
    });
  })();

  // Carrousels recos/similaires
  document.querySelectorAll('.swiper.recos').forEach(el=>{
    new Swiper(el, {
      slidesPerView: 3.2,
      spaceBetween: 12,
      breakpoints: {
        480:{slidesPerView:4.2, spaceBetween:12},
        640:{slidesPerView:5.5, spaceBetween:14},
        1024:{slidesPerView:7.5, spaceBetween:16}
      }
    });
  });

  // Bouton Ma liste (AJAX)
  (function(){
    const btn = document.getElementById('watchlistBtn');
    if (!btn) return;
    const label = btn.querySelector('.wl-label');
    const csrf = '{{ csrf_watchlist }}';

    function setState(inList){
      btn.classList.toggle('bg-rose-600', inList);
      btn.classList.toggle('hover:bg-rose-500', inList);
      btn.classList.toggle('bg-neutral-800', !inList);
      btn.classList.toggle('hover:bg-neutral-700', !inList);
      label.textContent = inList ? 'Retirer' : '➕ Ma liste';
      btn.dataset.initial = inList ? '1' : '0';
    }

    btn.addEventListener('click', async ()=>{
      const payload = {
        mediaType: btn.dataset.mediatype,
        tmdbId: parseInt(btn.dataset.id, 10),
        title: btn.dataset.title,
        poster: btn.dataset.poster || null,
        backdrop: btn.dataset.backdrop || null
      };

      try {
        const res = await fetch('{{ path('app_watchlist_toggle') }}', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': csrf },
          body: JSON.stringify(payload)
        });
        const data = await res.json();
        if (data.status === 'added') setState(true);
        else if (data.status === 'removed') setState(false);
      } catch (e) { console.error(e); }
    });
  })();

  // Notes (AJAX)
  (function(){
    const wrap = document.getElementById('ratingStars');
    if (!wrap) return;

    const csrf = '{{ csrf_token("rating") }}';
    const mediaType = wrap.dataset.mediatype;
    const tmdbId = parseInt(wrap.dataset.id, 10);
    const stars = Array.from(wrap.querySelectorAll('.star'));
    const elYour = document.getElementById('ratingYour');
    const elAvg = document.getElementById('ratingAvg');
    const elCount = document.getElementById('ratingCount');

    function paint(n){
      stars.forEach((s,idx)=> s.style.color = (idx < n) ? '#fbbf24' : '#4b5563');
    }

    async function load(){
      try{
        const url = new URL('{{ path("app_rating_summary") }}', window.location.origin);
        url.searchParams.set('mediaType', mediaType);
        url.searchParams.set('tmdbId', tmdbId);
        const res = await fetch(url);
        const data = await res.json();
        if (data.avg !== undefined){
          elAvg.textContent = 'Moyenne : ' + data.avg + '/10';
          elCount.textContent = '('+data.count+' votes)';
          if (data.your){
            elYour.textContent = 'Ta note : ' + data.your + '/10';
            paint(data.your);
          } else {
            elYour.textContent = 'Ta note : —';
            paint(0);
          }
        }
      }catch(e){ console.error(e); }
    }

    stars.forEach(btn=>{
      btn.addEventListener('mouseenter', ()=> paint(parseInt(btn.dataset.value,10)));
      btn.addEventListener('mouseleave', ()=> {});
      btn.addEventListener('click', async ()=>{
        const val = parseInt(btn.dataset.value,10);
        try{
          const res = await fetch('{{ path("app_rating_set") }}', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': csrf },
            body: JSON.stringify({ mediaType, tmdbId, value: val })
          });
          const data = await res.json();
          if (data.status === 'ok'){
            elYour.textContent = 'Ta note : ' + data.your + '/10';
            elAvg.textContent = 'Moyenne : ' + data.avg + '/10';
            elCount.textContent = '('+data.count+' votes)';
            paint(val);
          } else if (data.error === 'not_authenticated'){
            alert('Connecte-toi pour noter.');
          }
        }catch(e){ console.error(e); }
      });
    });

    load();
  })();
</script>
{% endblock %}

